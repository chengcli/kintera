#!/usr/bin/env bash
set -euo pipefail

# Inputs from environment (docker-compose.yaml / .env)
: "${USERNAME:=dev}"
: "${USER_UID:=1000}"
: "${USER_GID:=1000}"

# Ensure group exists with desired GID
ensure_group() {
  if getent group "${USERNAME}" >/dev/null 2>&1; then
    CUR_GID="$(getent group "${USERNAME}" | cut -d: -f3)"
    if [ "${CUR_GID}" != "${USER_GID}" ]; then
      groupmod -g "${USER_GID}" "${USERNAME}" || true
    fi
  elif getent group "${USER_GID}" >/dev/null 2>&1; then
    # A group with the target GID exists—reuse its name
    EXISTING_GRP="$(getent group "${USER_GID}" | cut -d: -f1)"
    USERGROUP="${EXISTING_GRP}"
  else
    groupadd -g "${USER_GID}" "${USERNAME}"
  fi
}

# Ensure user exists with desired UID/GID (or update existing)
ensure_user() {
  if id -u "${USERNAME}" >/dev/null 2>&1; then
    CUR_UID="$(id -u "${USERNAME}")"
    CUR_GID="$(id -g "${USERNAME}")"
    if [ "${CUR_GID}" != "${USER_GID}" ]; then
      usermod -g "${USER_GID}" "${USERNAME}" || true
    fi
    if [ "${CUR_UID}" != "${USER_UID}" ]; then
      usermod -u "${USER_UID}" -m "${USERNAME}" || true
    fi
  else
    # If a different name already has the target UID, reuse that name
    if getent passwd "${USER_UID}" >/dev/null 2>&1; then
      USERNAME="$(getent passwd "${USER_UID}" | cut -d: -f1)"
    else
      useradd -m -u "${USER_UID}" -g "${USER_GID}" -s /bin/bash "${USERNAME}"
    fi
  fi
}

ensure_group
ensure_user

# Resolve HOME and make sure it's present
HOME_DIR="$(getent passwd "${USER_UID}" | cut -d: -f6)"
[ -n "${HOME_DIR}" ] || HOME_DIR="/home/${USERNAME}"
mkdir -p "${HOME_DIR}"

# Own ONLY internal, non-bind paths (bind mounts ignore chown and it’s slow)
for d in /ccache /opt/venv "${HOME_DIR}"; do
  [ -d "$d" ] && chown -R "${USER_UID}:${USER_GID}" "$d" || true
done

# Nice defaults for interactive use
if ! grep -q 'EDITOR=nvim' "${HOME_DIR}/.bashrc" 2>/dev/null; then
  echo 'export EDITOR=nvim; export VISUAL=nvim' >> "${HOME_DIR}/.bashrc" || true
fi
chown "${USER_UID}:${USER_GID}" "${HOME_DIR}/.bashrc" 2>/dev/null || true

# Show who we are (handy for debugging once)
echo "Launching as $(id -un ${USER_UID} 2>/dev/null || echo ${USERNAME}) (uid=${USER_UID}, gid=${USER_GID})"
export HOME="${HOME_DIR}"

# Drop privileges and exec the user’s command
if command -v gosu >/dev/null 2>&1; then
  exec gosu "${USER_UID}:${USER_GID}" "$@"
else
  exec su -s /bin/bash -c "$*" "$(id -un "${USER_UID}")"
fi
