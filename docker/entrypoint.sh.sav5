#!/usr/bin/env bash
set -euo pipefail

: "${USERNAME:=chengcli}"
: "${USER_UID:=114256397}"
: "${USER_GID:=114256397}"

# ensure group exists or update it
if getent group "${USERNAME}" >/dev/null 2>&1; then
  CUR_GID=$(getent group "${USERNAME}" | cut -d: -f3)
  if [ "$CUR_GID" != "$USER_GID" ]; then groupmod -g "$USER_GID" "$USERNAME"; fi
else
  groupadd -g "$USER_GID" "$USERNAME"
fi

# ensure user exists or update it
if id "$USERNAME" >/dev/null 2>&1; then
  CUR_UID=$(id -u "$USERNAME")
  if [ "$CUR_UID" != "$USER_UID" ]; then usermod -u "$USER_UID" -g "$USER_GID" -m "$USERNAME"; fi
else
  useradd -m -u "$USER_UID" -g "$USER_GID" -s /bin/bash "$USERNAME"
fi

HOME_DIR=$(getent passwd "$USERNAME" | cut -d: -f6)

# fix ownership only on internal writable dirs (do NOT chown bind mounts)
for d in /ccache /opt/venv "$HOME_DIR"; do
  [ -d "$d" ] && chown -R "$USER_UID:$USER_GID" "$d" || true
done

# nice defaults
echo 'export EDITOR=nvim; export VISUAL=nvim' >> "$HOME_DIR/.bashrc" || true
chown "$USER_UID:$USER_GID" "$HOME_DIR/.bashrc" || true

# drop privileges
if command -v gosu >/dev/null 2>&1; then
  exec gosu "$USERNAME" "$@"
else
  exec su -s /bin/bash -c "$*" "$USERNAME"
fi

# Print helpful banner
echo "Dev container ready. Python: $(python --version)"
echo "CUDA version: $(nvcc --version | sed -n 's/^.*release \(.*\),.*/\1/p')"
exec "$@"
